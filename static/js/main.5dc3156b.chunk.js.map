{"version":3,"sources":["redux/actions/actionTypes.js","redux/actions/actions.js","components/Task.jsx","components/EditTaskCard.jsx","components/NewTaskCard.jsx","components/Navbar.jsx","components/AddButton.jsx","components/Main.jsx","App.js","redux/store/reducers/reducer.js","index.js"],"names":["ADD_ITEM","EDIT_ITEM","DELETE_ITEM","SET_TITLE","SET_ITEM","START_EDIT_ITEM","CANCEL_EDIT_ITEM","START_EDIT_ITEMS","CANCEL_EDIT_ITEMS","START_NEW_ITEM","CANCEL_NEW_ITEM","setTitle","title","type","actionTypes","startEditItem","cancelEditItem","Task","props","editTask","isEditItems","setItem","item","className","onClick","deleteItem","id","htmlFor","connect","state","items","isEditItem","dispatch","map","editItem","inputREF","useRef","ref","defaultValue","current","value","addItem","cancelNewItem","placeholder","isNewItem","startEditItems","cancelEditItems","disabled","startNewItem","App","initialState","reducer","action","newItem","Date","now","concat","newList","index","indexOf","edit","splice","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5dc3156b.chunk.js","sourcesContent":["export const ADD_ITEM = \"ADD_ITEM\";\r\nexport const EDIT_ITEM = \"EDIT_ITEM\";\r\nexport const DELETE_ITEM = \"DELETE_ITEM\";\r\n\r\nexport const SET_TITLE = \"SET_TITLE\";\r\nexport const SET_ITEM = \"SET_ITEM\";\r\n\r\nexport const START_EDIT_ITEM = \"START_EDIT_ITEM\";\r\nexport const CANCEL_EDIT_ITEM = \"CANCEL_EDIT_ITEM\";\r\n\r\nexport const START_EDIT_ITEMS = \"START_EDIT_ITEMS\";\r\nexport const CANCEL_EDIT_ITEMS = \"CANCEL_EDIT_ITEMS\";\r\n\r\nexport const START_NEW_ITEM = \"START_NEW_ITEM\";\r\nexport const CANCEL_NEW_ITEM = \"CANCEL_NEW_ITEM\";","import * as actionTypes from \"./actionTypes.js\";\r\n\r\nexport const addItem = () => {\r\n  return {\r\n    type: actionTypes.ADD_ITEM,\r\n  };\r\n};\r\n\r\nexport const editItem = (item) => {\r\n  return {\r\n    type: actionTypes.EDIT_ITEM,\r\n    item: item,\r\n  };\r\n};\r\n\r\nexport const deleteItem = (item) => {\r\n  return {\r\n    type: actionTypes.DELETE_ITEM,\r\n    item: item,\r\n  };\r\n};\r\n\r\nexport const setTitle = (title) => {\r\n  return {\r\n    type: actionTypes.SET_TITLE,\r\n    title: title,\r\n  };\r\n};\r\n\r\nexport const setItem = (item) => {\r\n  return {\r\n    type: actionTypes.SET_ITEM,\r\n    item: item,\r\n  };\r\n};\r\n\r\nexport const startEditItem = () => {\r\n  return {\r\n    type: actionTypes.START_EDIT_ITEM,\r\n  };\r\n};\r\n\r\nexport const cancelEditItem = () => {\r\n  return {\r\n    type: actionTypes.CANCEL_EDIT_ITEM,\r\n  };\r\n};\r\n\r\nexport const startEditItems = () => {\r\n  return {\r\n    type: actionTypes.START_EDIT_ITEMS,\r\n  };\r\n};\r\n\r\nexport const cancelEditItems = () => {\r\n  return {\r\n    type: actionTypes.CANCEL_EDIT_ITEMS,\r\n  };\r\n};\r\n\r\nexport const startNewItem = () => {\r\n  return {\r\n    type: actionTypes.START_NEW_ITEM,\r\n  };\r\n};\r\n\r\nexport const cancelNewItem = () => {\r\n  return {\r\n    type: actionTypes.CANCEL_NEW_ITEM,\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport \"../styles/Task.scss\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport * as actionTypes from \"../redux/actions/actions.js\";\r\n\r\nconst Task = (props) => {\r\n  const deleteTask = () => {\r\n    props.setItem(props.item);\r\n    props.deleteItem();\r\n  };\r\n\r\n  const editTask = () => {\r\n    if (props.isEditItems) {\r\n      props.setItem(props.item);\r\n      props.startEditItem();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"task-wrapper\">\r\n      {props.isEditItems ? (\r\n        <div className=\"delete-sign\" onClick={deleteTask}></div>\r\n      ) : (\r\n        <input type=\"radio\" id={props.id}></input>\r\n      )}\r\n      {props.isEditItems ? (\r\n        <p onClick={editTask}>{props.title}</p>\r\n      ) : (\r\n        <label htmlFor={props.id} onClick={editTask}>\r\n          {props.title}\r\n        </label>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Tasks = ({ items, isEditItems, setItem, deleteItem, startEditItem }) => {\r\n  return (\r\n    <div className=\"tasks-wrapper\">\r\n      {items.map((item) => {\r\n        return (\r\n          <Task\r\n            item={item}\r\n            key={item.id}\r\n            id={item.id}\r\n            title={item.title}\r\n            isEditItems={isEditItems}\r\n            setItem={setItem}\r\n            deleteItem={deleteItem}\r\n            startEditItem={startEditItem}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    title: state.title,\r\n    items: state.items,\r\n    isEditItem: state.isEditItem,\r\n    isEditItems: state.isEditItems,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setItem: (item) => dispatch(actionTypes.setItem(item)),\r\n    deleteItem: () => dispatch(actionTypes.deleteItem()),\r\n    startEditItem: () => dispatch(actionTypes.startEditItem()),\r\n    //setTitle: (title) => dispatch(actionTypes.setTitle(title)),\r\n    //addItem: () => dispatch(actionTypes.addItem()),\r\n    //editItem: () => dispatch(actionTypes.editItem()),\r\n    //startEdit: () => dispatch(actionTypes.startEdit()),\r\n    //cancelEdit: () => dispatch(actionTypes.cancelEdit())\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Tasks);\r\n","import React, { useRef } from \"react\";\r\nimport \"../styles/EditTaskCard.scss\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport * as actionTypes from \"../redux/actions/actions.js\";\r\n\r\nconst TaskCard = ({item, setTitle, editItem, cancelEditItem}) => {\r\n  const inputREF = useRef();\r\n\r\n  const cancelEdit = () => {\r\n    cancelEditItem();\r\n  }\r\n\r\n  const saveItem = () => {\r\n    if (inputREF.current.value !== \"\") {\r\n      setTitle(inputREF.current.value);\r\n      editItem();\r\n      cancelEditItem();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"task-card\">\r\n      <input type=\"text\" ref={inputREF} defaultValue={item.title}></input>\r\n      <div>\r\n        <button className=\"cancel-btn\" onClick={cancelEdit}>Закрыть</button>\r\n        <button className=\"save-btn\" onClick={saveItem}>Сохранить</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    item: state.item,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    startEditItem: () => dispatch(actionTypes.startEditItem()),\r\n    cancelEditItem: () => dispatch(actionTypes.cancelEditItem()),\r\n    setTitle: (title) => dispatch(actionTypes.setTitle(title)),\r\n    editItem: () => dispatch(actionTypes.editItem()),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskCard);\r\n","import React, { useRef } from 'react';\r\nimport \"../styles/NewTaskCard.scss\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport * as actionTypes from \"../redux/actions/actions.js\";\r\n\r\nconst NewTaskCard = ({setTitle, addItem, cancelNewItem}) => {\r\n    const inputREF = useRef();\r\n\r\n    const cancelNewTask = () => {\r\n      cancelNewItem();\r\n    }\r\n\r\n    const addNewTask = () => {\r\n      if (inputREF.current.value !== \"\") {\r\n        setTitle(inputREF.current.value);\r\n        addItem();\r\n        cancelNewItem();\r\n      }\r\n    }\r\n\r\n    return (\r\n        <div className=\"new-task-card\">\r\n        <textarea placeholder=\"Введите текст задачи\" ref={inputREF}/>\r\n        <div>\r\n          <button className=\"cancel-btn\" onClick={cancelNewTask}>Закрыть</button>\r\n          <button className=\"save-btn\" onClick={addNewTask}>Сохранить</button>\r\n        </div>\r\n      </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    title: state.title,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setTitle: (title) => dispatch(actionTypes.setTitle(title)),\r\n    addItem: () => dispatch(actionTypes.addItem()),\r\n    cancelNewItem: () => dispatch(actionTypes.cancelNewItem())\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NewTaskCard);","import React from 'react';\r\nimport \"../styles/Navbar.scss\";\r\n\r\nimport { connect } from 'react-redux'\r\nimport * as actionTypes from '../redux/actions/actions.js';\r\n\r\nconst Navbar = ({isNewItem, isEditItems, isEditItem, startEditItems, cancelEditItems, cancelEditItem}) => {\r\n\r\n  const triggerEdit = () => {\r\n    if (isEditItems || isEditItem) {\r\n      cancelEditItem();\r\n      cancelEditItems();\r\n    } else {\r\n      startEditItems();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"navbar-wrapper\">\r\n      <h1 className=\"main-header\">Сегодня</h1>\r\n      <button disabled={isNewItem ? true : false} onClick={triggerEdit} className=\"edit-btn\">{isEditItems ? \"Отменить\" : \"Править\"}</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n      isNewItem: state.isNewItem,\r\n      isEditItem: state.isEditItem,\r\n      isEditItems: state.isEditItems,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n      startEditItems: () => dispatch(actionTypes.startEditItems()),\r\n      cancelEditItems: () => dispatch(actionTypes.cancelEditItems()),\r\n\r\n      cancelEditItem: () => dispatch(actionTypes.cancelEditItem())\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Navbar);\r\n","import React from \"react\";\r\n\r\nimport \"../styles/AddButton.scss\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport * as actionTypes from \"../redux/actions/actions.js\";\r\n\r\nconst AddButton = ({startNewItem}) => {\r\n  const createNewTask = () => {\r\n    startNewItem();\r\n  }\r\n\r\n  return <div className=\"add-btn\" onClick={createNewTask}></div>;\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    startNewItem: () => dispatch(actionTypes.startNewItem())\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddButton);\r\n\r\n","import React from \"react\";\r\nimport \"../styles/Main.scss\";\r\n\r\nimport Tasks from \"./Task.jsx\";\r\nimport TaskCard from \"./EditTaskCard.jsx\";\r\nimport NewTaskCard from \"./NewTaskCard.jsx\";\r\nimport Navbar from \"./Navbar.jsx\";\r\nimport AddButton from \"./AddButton.jsx\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport * as actionTypes from \"../redux/actions/actions.js\";\r\n\r\nconst Main = ({ isEditItem, isNewItem }) => {\r\n  return (\r\n    <div className=\"main-container\">\r\n      <div>\r\n        <Navbar />\r\n        {(isEditItem && !isNewItem) && <TaskCard/>}\r\n        {(!isEditItem && isNewItem) && <NewTaskCard/>}\r\n        {(!isEditItem && !isNewItem) && <Tasks/>}\r\n      </div>\r\n      {(!isEditItem && !isNewItem) && <AddButton />}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isEditItem: state.isEditItem,\r\n    isNewItem: state.isNewItem\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Main);\r\n","import Main from \"./components/Main\";\n\nconst App = () => {\n  return <Main />;\n};\n\nexport default App;\n","import * as actionTypes from \"../../actions/actionTypes.js\";\r\n\r\nconst initialState = {\r\n  items: [\r\n    { id: 1, title: \"Пройти стажировку в Онли\"  },\r\n    { id: 2, title: \"Побриться\" },\r\n    { id: 3, title: \"Купить молоко\" },\r\n    { id: 4, title: \"Не забыть забрать сына из садика\" },\r\n    { id: 5, title: \"Купить сыр\" },\r\n  ],\r\n  title: \"\",\r\n  item: \"\",\r\n  isEditItem: false,\r\n  isEditItems: false,\r\n  isNewItem: false,\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.ADD_ITEM: {\r\n      const newItem = {\r\n        id: Date.now(),\r\n        title: state.title,\r\n      };\r\n      return {\r\n        ...state,\r\n        items: state.items.concat(newItem),\r\n        title: \"\",\r\n      };\r\n    }\r\n\r\n    case actionTypes.EDIT_ITEM: {\r\n      const newList = [...state.items];\r\n      const index = newList.indexOf(state.item);\r\n\r\n      if (index !== -1) {\r\n        newList[index].title = state.title;\r\n        return {\r\n          ...state,\r\n          title: \"\",\r\n          edit: false,\r\n          items: newList,\r\n        };\r\n      } else {\r\n        return {\r\n          ...state,\r\n        };\r\n      }\r\n    }\r\n\r\n    case actionTypes.DELETE_ITEM: {\r\n      const newList = [...state.items];\r\n      const index = newList.indexOf(state.item);\r\n      if (index !== -1) {\r\n        newList.splice(index, 1);\r\n        return {\r\n          ...state,\r\n          items: newList,\r\n        };\r\n      } else {\r\n        return {\r\n          ...state,\r\n        };\r\n      }\r\n    }\r\n\r\n    case actionTypes.SET_TITLE:\r\n      return {\r\n        ...state,\r\n        title: action.title,\r\n      };\r\n\r\n    case actionTypes.SET_ITEM:\r\n      return {\r\n        ...state,\r\n        item: action.item,\r\n      };\r\n\r\n    case actionTypes.START_EDIT_ITEM:\r\n      return {\r\n        ...state,\r\n        isEditItem: true,\r\n      };\r\n\r\n    case actionTypes.CANCEL_EDIT_ITEM:\r\n      return {\r\n        ...state,\r\n        isEditItem: false,\r\n      };\r\n\r\n    case actionTypes.START_EDIT_ITEMS:\r\n      return {\r\n        ...state,\r\n        isEditItems: true,\r\n      };\r\n\r\n    case actionTypes.CANCEL_EDIT_ITEMS:\r\n      return {\r\n        ...state,\r\n        isEditItems: false,\r\n      };\r\n\r\n    case actionTypes.START_NEW_ITEM:\r\n      return {\r\n        ...state,\r\n        isNewItem: true,\r\n      };\r\n\r\n    case actionTypes.CANCEL_NEW_ITEM:\r\n      return {\r\n        ...state,\r\n        isNewItem: false,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport reducer from \"./redux/store/reducers/reducer.js\";\n\nconst store = createStore(reducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}